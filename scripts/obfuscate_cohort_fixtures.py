"""
Obfuscate fixtures previously generated by cohort_fixtures.py.

This script will modify fixtures and Postgres values in tandem. Before running, ensure that your demo-local.py has
FIXTURES_PATH and SQLALCHEMY_DATABASE_URI values set to desired demo sources.
"""

import json
import os
from scriptpath import scriptify


os.environ['BOAC_ENV'] = 'demo'

INITIAL_FAKE_UID = 9000000


@scriptify.in_app
def main(app):
    from boac import db
    from boac.models.team import Team

    fake_uid = INITIAL_FAKE_UID
    for member in Team.query.all():
        uid = member.member_uid
        cohort_name = Team.team_definitions.get(member.code, member.code)

        # Change UID in Postgres.
        member.member_uid = fake_uid
        db.session.commit()

        profile_file = '{path}/canvas_user_for_uid_{uid}.json'.format(path=app.config.get('FIXTURES_PATH'))
        courses_file = '{path}/canvas_user_courses_{uid}.json'.format(path=app.config.get('FIXTURES_PATH'))

        # Obfuscate and rename Canvas profile fixture.
        if os.path.isfile(profile_file):
            with open(profile_file) as f:
                profile_json = json.loads(f.read())

            profile_json['name'] = member.member_name
            profile_json['short_name'] = member.member_name
            profile_json['sortable_name'] = ', '.join(reversed(member.member_name.split()))

            profile_json['login_id'] = str(fake_uid)
            profile_json['sis_login_id'] = str(fake_uid)
            if 'UID' in profile_json['sis_user_id']:
                profile_json['sis_user_id'] = 'UID:{uid}'.format(uid=str(fake_uid))
            else:
                profile_json['sis_user_id'] = str(fake_uid * 2)

            if cohort_name.endswith('Men'):
                profile_json['avatar_url'] = '/static/app/shared/avatar-male.png'
            else:
                profile_json['avatar_url'] = '/static/app/shared/avatar-female.png'

            new_profile_file = profile_file.replace(uid, str(fake_uid))
            with open(new_profile_file, 'w') as outfile:
                json.dump(profile_json, outfile, indent=2)
            os.remove(profile_file)
            print('Replaced {profile_file} with updated values at {new_profile_file}'.format(profile_file=profile_file, new_courses_file=new_profile_file))

        # Rename Canvas course fixture, if present.
        if os.path.isfile(courses_file):
            new_courses_file = courses_file.replace(uid, str(fake_uid))
            os.rename(courses_file, new_courses_file)
            print('Moved {courses_file} to {new_courses_file}'.format(courses_file=courses_file, new_courses_file=new_courses_file))

        fake_uid += 1


main()
